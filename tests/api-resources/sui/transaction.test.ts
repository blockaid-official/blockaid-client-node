// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.

import Blockaid from '@blockaid/client';
import { Response } from 'node-fetch';

const client = new Blockaid({
  apiKey: 'My API Key',
  baseURL: process.env['TEST_API_BASE_URL'] ?? 'http://127.0.0.1:4010',
});

describe('resource transaction', () => {
  test('scan: only required params', async () => {
    const responsePromise = client.sui.transaction.scan({
      account_address: '0x45e90b3ea2e1920c43d92d224630d6a865c1b58a7b4e770c2ac156eab30eb491',
      chain: 'mainnet',
      metadata: { type: 'wallet', url: 'localhost' },
      transaction:
        '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',
    });
    const rawResponse = await responsePromise.asResponse();
    expect(rawResponse).toBeInstanceOf(Response);
    const response = await responsePromise;
    expect(response).not.toBeInstanceOf(Response);
    const dataAndResponse = await responsePromise.withResponse();
    expect(dataAndResponse.data).toBe(response);
    expect(dataAndResponse.response).toBe(rawResponse);
  });

  test('scan: required and optional params', async () => {
    const response = await client.sui.transaction.scan({
      account_address: '0x45e90b3ea2e1920c43d92d224630d6a865c1b58a7b4e770c2ac156eab30eb491',
      chain: 'mainnet',
      metadata: { type: 'wallet', url: 'localhost' },
      transaction:
        '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',
      options: ['validation'],
    });
  });
});
